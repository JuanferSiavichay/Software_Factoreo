# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'VentanaBloque2.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt5 import QtCore, QtGui, QtWidgets
import sympy
import sympy as sp
import re
import VentanaBloques


class VentanaBloque2_Class(QtWidgets.QMainWindow):

    def __init__(self):
        super().__init__()
        self.setupUi(self)

    def setupUi(self, VentanaBloque2_2):
        VentanaBloque2_2.setObjectName("VentanaBloque2_2")
        VentanaBloque2_2.resize(800, 589)
        VentanaBloque2_2.setStyleSheet("background-color: rgb(136, 136, 136);")
        self.centralwidget = QtWidgets.QWidget(VentanaBloque2_2)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(170, 30, 471, 51))
        self.label.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"Border-radius: 10px;")
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(420, 100, 281, 91))
        self.label_3.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(70, 100, 281, 91))
        self.label_4.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(160, 210, 81, 31))
        self.label_5.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"")
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(530, 210, 81, 31))
        self.label_6.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"")
        self.label_6.setObjectName("label_6")
        self.TxtDatos = QtWidgets.QLineEdit(self.centralwidget)
        self.TxtDatos.setGeometry(QtCore.QRect(70, 260, 251, 31))
        self.TxtDatos.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.TxtDatos.setObjectName("TxtDatos")
        self.TxtDatos_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.TxtDatos_2.setGeometry(QtCore.QRect(440, 260, 251, 31))
        self.TxtDatos_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.TxtDatos_2.setObjectName("TxtDatos_2")
        self.CmdResolver = QtWidgets.QPushButton(self.centralwidget)
        self.CmdResolver.setGeometry(QtCore.QRect(160, 310, 81, 41))
        self.CmdResolver.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.CmdResolver.setObjectName("CmdResolver")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(130, 370, 131, 31))
        self.label_7.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(500, 370, 131, 31))
        self.label_8.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"")
        self.label_8.setObjectName("label_8")
        self.CmdRegresar = QtWidgets.QPushButton(self.centralwidget)
        self.CmdRegresar.setGeometry(QtCore.QRect(330, 500, 81, 41))
        self.CmdRegresar.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.CmdRegresar.setObjectName("CmdRegresar")
        self.CmdResolver_2 = QtWidgets.QPushButton(self.centralwidget)
        self.CmdResolver_2.setGeometry(QtCore.QRect(530, 310, 81, 41))
        self.CmdResolver_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.CmdResolver_2.setObjectName("CmdResolver_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, -10, 151, 101))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("logo_tamaño_web_vertical.png"))
        self.label_2.setObjectName("label_2")
        self.LblDiferencia = QtWidgets.QLabel(self.centralwidget)
        self.LblDiferencia.setGeometry(QtCore.QRect(90, 420, 221, 41))
        self.LblDiferencia.setStyleSheet("font: 75 12pt \"MS Shell Dlg 2\";\n"
"background-color: rgb(255, 255, 255);")
        self.LblDiferencia.setText("")
        self.LblDiferencia.setObjectName("LblDiferencia")
        self.LblCubos = QtWidgets.QLabel(self.centralwidget)
        self.LblCubos.setGeometry(QtCore.QRect(450, 420, 221, 41))
        self.LblCubos.setStyleSheet("font: 75 12pt \"MS Shell Dlg 2\";\n"
"background-color: rgb(255, 255, 255);")
        self.LblCubos.setText("")
        self.LblCubos.setObjectName("LblCubos")
        VentanaBloque2_2.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(VentanaBloque2_2)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        VentanaBloque2_2.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(VentanaBloque2_2)
        self.statusbar.setObjectName("statusbar")
        VentanaBloque2_2.setStatusBar(self.statusbar)

        self.CmdResolver.clicked.connect(self.Resuelve11)
        self.CmdResolver_2.clicked.connect(self.Resuelve22)
        self.CmdRegresar.clicked.connect(self.CierraBloque11)

        self.retranslateUi(VentanaBloque2_2)
        QtCore.QMetaObject.connectSlotsByName(VentanaBloque2_2)

    def retranslateUi(self, VentanaBloque2_2):
        _translate = QtCore.QCoreApplication.translate
        VentanaBloque2_2.setWindowTitle(_translate("VentanaBloque2_2", "VentanaBloque2"))
        self.label.setText(_translate("VentanaBloque2_2", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600;\">Diferencias de Cuadrados y Diferencias de Cubos</span></p></body></html>"))
        self.label_3.setText(_translate("VentanaBloque2_2", "<html><head/><body><p><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff;\">Diferencias de Cubos</span></p><p><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff;\">Ejemplo: x</span><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff; vertical-align:super;\">3</span><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff;\">- 8= (x-2)(x</span><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff; vertical-align:super;\">2</span><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff;\">+2x+4)</span></p></body></html>"))
        self.label_4.setText(_translate("VentanaBloque2_2", "<html><head/><body><p><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff;\">Diferencias de Cuadrados</span></p><p><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff;\">Ejemplo: x</span><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff; vertical-align:super;\">2</span><span style=\" font-family:\'KaTeX_Main,Times New Roman,serif\'; font-size:14pt; font-weight:600; color:#000000; background-color:#ffffff;\">- 9= (x+3)(x-3)</span></p></body></html>"))
        self.label_5.setText(_translate("VentanaBloque2_2", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600;\">Datos</span></p><p align=\"center\"><br/></p></body></html>"))
        self.label_6.setText(_translate("VentanaBloque2_2", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600;\">Datos</span></p><p align=\"center\"><br/></p></body></html>"))
        self.CmdResolver.setText(_translate("VentanaBloque2_2", "Resolver"))
        self.label_7.setText(_translate("VentanaBloque2_2", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600;\">Resultado</span></p><p align=\"center\"><br/></p></body></html>"))
        self.label_8.setText(_translate("VentanaBloque2_2", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600;\">Resultado</span></p><p align=\"center\"><br/></p></body></html>"))
        self.CmdRegresar.setText(_translate("VentanaBloque2_2", "Regresar"))
        self.CmdResolver_2.setText(_translate("VentanaBloque2_2", "Resolver"))

    def Resuelve11(self):
        try:
            # Convertir la expresión ingresada en un objeto sympy
            expresioninicial = self.TxtDatos.text()
            #print ("expresion inicial", expresioninicial)
            expresionsinespacio = expresioninicial.replace(" ", "")
            expresionsinespacio = expresionsinespacio.replace("^", "**")
            expresioncorregida = re.sub(r'([a-zA-Z])(?=[a-zA-Z])', r'\1*', expresionsinespacio)
            #print("expresion corregida 1", expresioncorregida)
            expresioncorregida = re.sub(r'([a-zA-Z])([a-zA-Z])', r'\1*\2', expresioncorregida)
            #print("expresion corregida 2", expresioncorregida)
            expresioncorregida = re.sub(r'(\d+)([a-zA-Z])', r'\1*\2', expresioncorregida)
            #print("expresion corregida 3", expresioncorregida)
            solution = sympy.factor(expresioncorregida)
            #solution = sp.solve(expresion1cam)
            #print("solucion final", solution)
            espaniol = str(solution)
            cadena = espaniol.replace("**", "^")
            cadena = cadena.replace("*", "")
            self.LblDiferencia.setText(cadena)

        except (sp.SympifyError, ValueError) as e:
            print(f"Error al procesar la expresión: {e}")


    def Resuelve22(self):
        try:
            # Convertir la expresión ingresada en un objeto sympy
            expresioninicial = self.TxtDatos_2.text()
            #print(expresioninicial)
            expresionsinespacio = expresioninicial.replace(" ", "")
            #print(expresionsinespacio)
            expresionsinespacio = expresionsinespacio.replace("^", "**")
            #print(expresionsinespacio)
            expresioncorregida = re.sub(r'([a-zA-Z])(?=[a-zA-Z])', r'\1*', expresionsinespacio)
            expresioncorregida = re.sub(r'([a-zA-Z])([a-zA-Z])', r'\1*\2', expresioncorregida)
            #print(expresioncorregida)
            expresioncorregida = re.sub(r'(\d+)([a-zA-Z])', r'\1*\2', expresioncorregida)
            #print(expresioncorregida)
            solution = sympy.factor(expresioncorregida)
            #print("solucion", solution)
            espaniol = str(solution)
            cadena = espaniol.replace("**", "^")
            #print("cadena expuesta", cadena)
            cadena = cadena.replace("*", "")
            self.LblCubos.setText(cadena)

        except (sp.SympifyError, ValueError) as e:
            print(f"Error al procesar la expresión: {e}")

    def CierraBloque11(self):
        self.close()  # Cierra la ventana actual
        self.ventana_principal1 = VentanaBloques.VentanaBloquesClass()  # Crea una nueva instancia de VentanaPrincipal
        self.ventana_principal1.show()  # Muestra la nueva ventana principal



def main():
    app = QtWidgets.QApplication(sys.argv)
    ventana = VentanaBloque2_Class()
    ventana.show()
    sys.exit(app.exec_())


if __name__ == "__main__":
    main()
