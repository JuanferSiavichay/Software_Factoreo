

# -*- coding: utf-8 -*-
# Form implementation generated from reading ui file 'VentanaBloques.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import uic

from VentanaAcceso import VentanaAccesoModulo  # Importa la clase de la ventana principal

from VentanaBloque1 import VentanaBloque1_Class
from VentanaBloque2 import VentanaBloque2_Class
from VentanaBloque3 import VentanaBloque3_Class

class VentanaBloquesClass(QtWidgets.QMainWindow):

    def __init__(self):
        super().__init__()
        self.setupUi(self)

    def setupUi(self, VentanaBloques):
        VentanaBloques.setObjectName("VentanaBloques")
        VentanaBloques.resize(582, 504)
        VentanaBloques.setStyleSheet("color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(146, 83, 62, 255));\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:1 rgba(149, 64, 64, 255));")
        self.centralwidget = QtWidgets.QWidget(VentanaBloques)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(110, 20, 411, 41))
        self.label.setObjectName("label")
        self.CmdBloque1 = QtWidgets.QPushButton(self.centralwidget)
        self.CmdBloque1.setGeometry(QtCore.QRect(240, 90, 91, 31))
        self.CmdBloque1.setStyleSheet("color: rgb(170, 0, 0);\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 85, 0);")
        self.CmdBloque1.setObjectName("CmdBloque1")
        self.CmdBloque2 = QtWidgets.QPushButton(self.centralwidget)
        self.CmdBloque2.setGeometry(QtCore.QRect(240, 150, 91, 31))
        self.CmdBloque2.setStyleSheet("color: rgb(170, 0, 0);\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 85, 255);")
        self.CmdBloque2.setObjectName("CmdBloque2")
        self.CmdBloque3 = QtWidgets.QPushButton(self.centralwidget)
        self.CmdBloque3.setGeometry(QtCore.QRect(240, 210, 91, 31))
        self.CmdBloque3.setStyleSheet("color: rgb(170, 0, 0);\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(170, 0, 0);")
        self.CmdBloque3.setObjectName("CmdBloque3")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(180, 280, 251, 131))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("ucacue-logo-centro-mediacion.png"))
        self.label_2.setObjectName("label_2")
        self.CmdCerrar = QtWidgets.QPushButton(self.centralwidget)
        self.CmdCerrar.setGeometry(QtCore.QRect(40, 420, 75, 23))
        self.CmdCerrar.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"")
        self.CmdCerrar.setObjectName("CmdCerrar")
        VentanaBloques.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(VentanaBloques)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 582, 21))
        self.menubar.setObjectName("menubar")
        VentanaBloques.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(VentanaBloques)
        self.statusbar.setObjectName("statusbar")
        VentanaBloques.setStatusBar(self.statusbar)

        self.CmdCerrar.clicked.connect(self.Cerrar_Ventana)
        self.CmdBloque1.clicked.connect(self.AbrirBloque1)
        self.CmdBloque2.clicked.connect(self.AbrirBloque2)
        self.CmdBloque3.clicked.connect(self.AbrirBloque3)
        self.retranslateUi(VentanaBloques)
        QtCore.QMetaObject.connectSlotsByName(VentanaBloques)

    def retranslateUi(self, VentanaBloques):
        _translate = QtCore.QCoreApplication.translate
        VentanaBloques.setWindowTitle(_translate("VentanaBloques", "VentanaBloques"))
        self.label.setText(_translate("VentanaBloques", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Fundamentos Matematicos Para La Computacion</span></p></body></html>"))
        self.CmdBloque1.setText(_translate("VentanaBloques", "BLOQUE 1"))
        self.CmdBloque2.setText(_translate("VentanaBloques", "BLOQUE 2"))
        self.CmdBloque3.setText(_translate("VentanaBloques", "BLOQUE 3"))
        self.CmdCerrar.setText(_translate("VentanaBloques", "Salir"))

    def Cerrar_Ventana(self):
        self.close()  # Cierra la ventana actual
        self.ventana_principal = VentanaAccesoModulo()  # Crea una nueva instancia de VentanaPrincipal
        self.ventana_principal.show()  # Muestra la nueva ventana principal

    def AbrirBloque1(self):
        try:

            self.close()  # Cierra la ventana actual
            #self.ventana_principal = VentanaAccesoModulo()  # Crea una nueva instancia de VentanaPrincipal
            # self.ventana_principal.show()  # Muestra la nueva ventana principal
            self.VentRecuB1 = VentanaBloque1_Class()

            #with open('VentanaRecupera.py', 'r') as file:
            #    codigo_ventana = file.read()

            #exec(codigo_ventana)
            #print("Ventana cargada correctamente")
            self.VentRecuB1.show()
        except Exception as e:
            print(f"Error al cargar la ventana: {e}")


    def AbrirBloque2(self):
        try:

            self.close()  # Cierra la ventana actual
            #self.ventana_principal = VentanaAccesoModulo()  # Crea una nueva instancia de VentanaPrincipal
            # self.ventana_principal.show()  # Muestra la nueva ventana principal
            self.VentRecuB2 = VentanaBloque2_Class()

            #with open('VentanaRecupera.py', 'r') as file:
            #    codigo_ventana = file.read()

            #exec(codigo_ventana)
            #print("Ventana cargada correctamente")
            self.VentRecuB2.show()
        except Exception as e:
            print(f"Error al cargar la ventana: {e}")


    def AbrirBloque3(self):
        try:

            self.close()  # Cierra la ventana actual
            #self.ventana_principal = VentanaAccesoModulo()  # Crea una nueva instancia de VentanaPrincipal
            # self.ventana_principal.show()  # Muestra la nueva ventana principal
            self.VentRecuB3 = VentanaBloque3_Class()

            #with open('VentanaRecupera.py', 'r') as file:
            #    codigo_ventana = file.read()

            #exec(codigo_ventana)
            #print("Ventana cargada correctamente")
            self.VentRecuB3.show()
        except Exception as e:
            print(f"Error al cargar la ventana: {e}")


def main():
    app = QtWidgets.QApplication(sys.argv)
    ventana = VentanaBloquesClass()
    ventana.show()
    sys.exit(app.exec_())


if __name__ == "__main__":
    main()
